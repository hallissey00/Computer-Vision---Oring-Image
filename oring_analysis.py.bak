import cv2 as cv
import numpy as np
import time
import matplotlib.pyplot as plt

def threshold(img,thresh):
    img[img > thresh] = 255
    img[img <= thresh] = 0
    return img

def img_hist(img):
    hist = np.zeros(256)
    for i in range(0,img.shape[0]):#loop through the rows
        for j in range(0,img.shape[1]):#loop through the columns
            hist[img[i,j]]+=1
    return hist

def invert(img):
    for i in range (0,img.shape[0]):
        for j in range(0,img.shape[1]):
            if img[1,j] == 0:
                img[i,j] == 255
            else:
                    img[i,j] == 0

    return img
                

def find_thresh(hist):
    max = 0
    max2 = -1
    for i in range(hist.shape[0]):
        if hist[i] > max:
            max = hist[i]
            max2 = i
    print('the value for the max is:' + str(max))
    print('the index value for the max is:' + str(max2))
    
    return max2-100

def dilate(img, number_rounds):

    for k in range(number_rounds):
        img_copy = img.copy()
    
    for i in range(1,img.shape[0]-1):#loop through the rows
        for j in range(1,img.shape[1]-1):#loop through the columns
          if img[i-1,j -1]==255:
                img_copy[i,j] = 255
          elif img[i-1,j]==255:
                img_copy[i,j] = 255
          elif img[i-1,j+1]==255:
                img_copy[i,j] = 255
          elif img[i,j-1]==255:
                img_copy[i,j] = 255
          elif img[i,j+1]==255:
                img_copy[i,j] = 255
          elif img[i+1,j-1]==255:
                img_copy[i,j] = 255
          elif img[i+1,j]==255:
                img_copy[i,j] = 255
          elif img[i+1,j+1]==255:
                img_copy[i,j] = 255

    return img

        
            
path = 'C:/Users/dylan/OneDrive/Desktop/Computer Vision/Assignment 1/Oring/oring'
i=1
while True:
    
    #read in an image into memory
    img = cv.imread(path + str(i) + '.jpg',0)
    i=(i+1)%15
    if i==0:
        i+=1
        
    hist = img_hist(img)
    thresh = find_thresh(hist)    
    threshold(img,thresh)
    img = invert(img)
    dilated_img = dilate(img,5)
    #morphology function
    #CCL function
    #defect detection function
    cv.imshow('thresholded image 1',img)
    cv.imshow('dilated image ',dialted_img)

    plt.plot(hist)
    plt.show()

    ch = cv.waitKey(100)
    if ch & 0xFF == ord('q'):
        break

    

    




